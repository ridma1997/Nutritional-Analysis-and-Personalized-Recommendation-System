{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rarrr\\\\Documents\\\\BCAS Degree\\\\Dissertation project\\\\Nutritional App\\\\src\\\\pages\\\\InteractiveCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveCharts = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/interactive-charts\");\n        const data = response.data.chart_data;\n        setChartData({\n          labels: data.map(entry => entry.date),\n          datasets: [{\n            label: \"Calories Consumed\",\n            data: data.map(entry => entry.calories),\n            borderColor: \"rgba(75, 192, 192, 1)\",\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n            fill: true\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n    fetchChartData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Interactive Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveCharts, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = InteractiveCharts;\nexport default InteractiveCharts;\nvar _c;\n$RefreshReg$(_c, \"InteractiveCharts\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Line","axios","jsxDEV","_jsxDEV","InteractiveCharts","_s","chartData","setChartData","fetchChartData","response","get","data","chart_data","labels","map","entry","date","datasets","label","calories","borderColor","backgroundColor","fill","error","console","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rarrr/Documents/BCAS Degree/Dissertation project/Nutritional App/src/pages/InteractiveCharts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Typography } from \"@mui/material\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst InteractiveCharts = () => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/interactive-charts\");\r\n        const data = response.data.chart_data;\r\n\r\n        setChartData({\r\n          labels: data.map((entry) => entry.date),\r\n          datasets: [\r\n            {\r\n              label: \"Calories Consumed\",\r\n              data: data.map((entry) => entry.calories),\r\n              borderColor: \"rgba(75, 192, 192, 1)\",\r\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Interactive Charts\r\n      </Typography>\r\n      <Line data={chartData} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InteractiveCharts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACrD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,8CAA8C,CAAC;QAChF,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACC,UAAU;QAErCL,YAAY,CAAC;UACXM,MAAM,EAAEF,IAAI,CAACG,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;UACvCC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,mBAAmB;YAC1BP,IAAI,EAAEA,IAAI,CAACG,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACI,QAAQ,CAAC;YACzCC,WAAW,EAAE,uBAAuB;YACpCC,eAAe,EAAE,yBAAyB;YAC1CC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDf,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACL,SAAS;IAAA2B,QAAA,gBACRtB,OAAA,CAACJ,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb7B,OAAA,CAACH,IAAI;MAACW,IAAI,EAAEL;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEhB,CAAC;AAAC3B,EAAA,CArCID,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}