{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rarrr\\\\Documents\\\\BCAS Degree\\\\Dissertation project\\\\Nutritional App\\\\src\\\\pages\\\\Suggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography, Card, CardContent, Grid } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Suggestions = () => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/suggestions\", {\n          params: {\n            user_id: 1\n          } // Replace with dynamic user_id if available\n        });\n        if (response.data.suggestions) {\n          setSuggestions(response.data.suggestions);\n        } else {\n          setSuggestions([]);\n        }\n      } catch (error) {\n        setError(\"Failed to fetch suggestions. Please try again later.\");\n      }\n    };\n    fetchSuggestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Personalized nutritional recommendations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      gutterBottom: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 3\n      },\n      children: suggestions.length > 0 ? suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              gutterBottom: true,\n              children: `Suggestion ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"center\",\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        sx: {\n          mt: 5\n        },\n        children: \"No suggestions available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Suggestions, \"vLXwOnymH5m7qduHJq2QKum+mDc=\");\n_c = Suggestions;\nexport default Suggestions;\nvar _c;\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Card","CardContent","Grid","axios","jsxDEV","_jsxDEV","Suggestions","_s","suggestions","setSuggestions","error","setError","fetchSuggestions","response","get","params","user_id","data","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","sx","mt","length","map","suggestion","index","item","xs","md","lg","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["C:/Users/rarrr/Documents/BCAS Degree/Dissertation project/Nutritional App/src/pages/Suggestions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Typography, Card, CardContent, Grid } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst Suggestions = () => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchSuggestions = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/suggestions\", {\r\n          params: { user_id: 1 }, // Replace with dynamic user_id if available\r\n        });\r\n\r\n        if (response.data.suggestions) {\r\n          setSuggestions(response.data.suggestions);\r\n        } else {\r\n          setSuggestions([]);\r\n        }\r\n      } catch (error) {\r\n        setError(\"Failed to fetch suggestions. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    fetchSuggestions();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Suggestions\r\n      </Typography>\r\n      <Typography variant=\"body1\" align=\"center\" gutterBottom>\r\n        Personalized nutritional recommendations.\r\n      </Typography>\r\n      {error && (\r\n        <Typography color=\"error\" align=\"center\" gutterBottom>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n      <Grid container spacing={3} sx={{ mt: 3 }}>\r\n        {suggestions.length > 0 ? (\r\n          suggestions.map((suggestion, index) => (\r\n            <Grid item xs={12} md={6} lg={4} key={index}>\r\n              <Card\r\n                sx={{\r\n                  borderRadius: \"10px\",\r\n                  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                    {`Suggestion ${index + 1}`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" align=\"center\">\r\n                    {suggestion}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography align=\"center\" sx={{ mt: 5 }}>\r\n            No suggestions available.\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Suggestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}