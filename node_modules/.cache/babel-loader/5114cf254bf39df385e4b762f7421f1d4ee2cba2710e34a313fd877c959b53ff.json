{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rarrr\\\\Documents\\\\BCAS Degree\\\\Dissertation project\\\\Nutritional App\\\\src\\\\pages\\\\InteractiveCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveCharts = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/interactive-charts\");\n        const data = response.data.chart_data;\n\n        // Check if data is valid\n        if (data && data.length > 0) {\n          setChartData({\n            labels: data.map(entry => entry.date),\n            datasets: [{\n              label: \"Calories Consumed\",\n              data: data.map(entry => entry.calories),\n              borderColor: \"success\",\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n              fill: true\n            }]\n          });\n        } else {\n          setError(\"No data available for the chart.\");\n        }\n      } catch (error) {\n        setError(\"Error fetching chart data. Please try again later.\");\n      }\n    };\n    fetchChartData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Interactive Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveCharts, \"iKFnIKEHTfUnhnGeyDFbrKqDOME=\");\n_c = InteractiveCharts;\nexport default InteractiveCharts;\nvar _c;\n$RefreshReg$(_c, \"InteractiveCharts\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Line","axios","jsxDEV","_jsxDEV","InteractiveCharts","_s","chartData","setChartData","error","setError","fetchChartData","response","get","data","chart_data","length","labels","map","entry","date","datasets","label","calories","borderColor","backgroundColor","fill","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/Users/rarrr/Documents/BCAS Degree/Dissertation project/Nutritional App/src/pages/InteractiveCharts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Typography } from \"@mui/material\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst InteractiveCharts = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/interactive-charts\");\r\n        const data = response.data.chart_data;\r\n\r\n        // Check if data is valid\r\n        if (data && data.length > 0) {\r\n          setChartData({\r\n            labels: data.map((entry) => entry.date),\r\n            datasets: [\r\n              {\r\n                label: \"Calories Consumed\",\r\n                data: data.map((entry) => entry.calories),\r\n                borderColor: \"success\",\r\n                backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n                fill: true,\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          setError(\"No data available for the chart.\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error fetching chart data. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Interactive Charts\r\n      </Typography>\r\n      {error ? (\r\n        <Typography color=\"error\" align=\"center\">\r\n          {error}\r\n        </Typography>\r\n      ) : (\r\n        chartData && <Line data={chartData} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InteractiveCharts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACrD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8CAA8C,CAAC;QAChF,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACC,UAAU;;QAErC;QACA,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UAC3BR,YAAY,CAAC;YACXS,MAAM,EAAEH,IAAI,CAACI,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;YACvCC,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE,mBAAmB;cAC1BR,IAAI,EAAEA,IAAI,CAACI,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACI,QAAQ,CAAC;cACzCC,WAAW,EAAE,SAAS;cACtBC,eAAe,EAAE,yBAAyB;cAC1CC,IAAI,EAAE;YACR,CAAC;UAEL,CAAC,CAAC;QACJ,CAAC,MAAM;UACLhB,QAAQ,CAAC,kCAAkC,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdC,QAAQ,CAAC,oDAAoD,CAAC;MAChE;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACL,SAAS;IAAA4B,QAAA,gBACRvB,OAAA,CAACJ,UAAU;MAAC4B,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZzB,KAAK,gBACJL,OAAA,CAACJ,UAAU;MAACmC,KAAK,EAAC,OAAO;MAACN,KAAK,EAAC,QAAQ;MAAAF,QAAA,EACrClB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,GAEb3B,SAAS,iBAAIH,OAAA,CAACH,IAAI;MAACa,IAAI,EAAEP;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAC5B,EAAA,CAjDID,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAmDvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}